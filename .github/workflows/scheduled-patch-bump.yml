name: Scheduled Patch Version Bump

on:
  schedule:
    # Run every Sunday at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: write  # Required to push changes
  packages: write  # Required to publish to GitHub Packages

jobs:
  scheduled-patch-bump:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@containerly'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Check if patch bump needed
        id: check
        run: |
          # Get last commit date
          LAST_COMMIT_DATE=$(git log -1 --format=%ct)
          CURRENT_DATE=$(date +%s)
          DAYS_SINCE_LAST_COMMIT=$(( (CURRENT_DATE - LAST_COMMIT_DATE) / 86400 ))
          
          echo "Days since last commit: $DAYS_SINCE_LAST_COMMIT"
          
          # Only bump if it's been more than 7 days since last commit
          if [ $DAYS_SINCE_LAST_COMMIT -gt 7 ]; then
            echo "need_bump=true" >> $GITHUB_OUTPUT
            echo "Patch bump needed - no commits in the last 7 days"
          else
            echo "need_bump=false" >> $GITHUB_OUTPUT
            echo "No patch bump needed - recent commits found"
          fi

      - name: Configure git
        if: steps.check.outputs.need_bump == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Bump patch version
        if: steps.check.outputs.need_bump == 'true'
        id: bump
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"
          
          # Bump patch version
          NEW_VERSION=$(npm version patch --no-git-tag-version)
          echo "New version: $NEW_VERSION"
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Commit and push version changes
        if: steps.check.outputs.need_bump == 'true'
        run: |
          git add package.json package-lock.json
          git commit -m "chore: scheduled patch version bump to ${{ steps.bump.outputs.version }}

This is an automated maintenance version bump."
          git push origin main

      - name: Compile TypeScript
        if: steps.check.outputs.need_bump == 'true'
        run: npm run compile

      - name: Synthesize CDK8s
        if: steps.check.outputs.need_bump == 'true'
        run: npm run synth

      - name: Publish to GitHub Packages
        if: steps.check.outputs.need_bump == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        if: steps.check.outputs.need_bump == 'true'
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.bump.outputs.version }}
          name: Release ${{ steps.bump.outputs.version }}
          body: |
            ## Scheduled Maintenance Release
            
            This is an automated patch version bump for regular maintenance.
            
            ## NPM Package
            
            This release is published as an NPM package:
            ```bash
            npm install @containerly/platform@${{ steps.bump.outputs.version }}
            ```
            
            ## Generated Kubernetes Manifests
            
            The synthesized Kubernetes manifests are attached to this release.
          files: |
            ./dist/platform.k8s.yaml
          draft: false
          prerelease: false